<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
	<Configurations>2019;2020;2021;2022;2023</Configurations>
	<Platforms>x64</Platforms>
    <ProjectGuid>{0949DEBE-12E7-4C38-9432-06490E022F86}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>Revit.ES.Extension.TestCommand</RootNamespace>
	<LangVersion>10</LangVersion>
  </PropertyGroup>

	<PropertyGroup>
		<!--Used to allow version wildcards-->
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<Deterministic>False</Deterministic>
	</PropertyGroup>

	<PropertyGroup Condition="$(Configuration.Contains('2019'))">
		<TargetFramework>net47</TargetFramework>
		<RevitVersion>2019</RevitVersion>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('2020'))">
		<TargetFramework>net471</TargetFramework>
		<RevitVersion>2020</RevitVersion>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('2021'))">
		<TargetFramework>net48</TargetFramework>
		<RevitVersion>2021</RevitVersion>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('2022'))">
		<TargetFramework>net48</TargetFramework>
		<RevitVersion>2022</RevitVersion>
	</PropertyGroup>
	<PropertyGroup Condition="$(Configuration.Contains('2023'))">
		<TargetFramework>net48</TargetFramework>
		<RevitVersion>2023</RevitVersion>
	</PropertyGroup>


	
	<PropertyGroup>
		<ErrorReport>prompt</ErrorReport>
		<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>

	<PropertyGroup Condition="'$(RevitVersion)' &lt;= '2020'">
		<DefineConstants>DEBUG;REVIT$(RevitVersion);</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(RevitVersion)' &gt;= '2021'">
		<DefineConstants>DEBUG;REVIT$(RevitVersion);FORGETYPEID</DefineConstants>
	</PropertyGroup>
	
	<PropertyGroup>
		<DebugSymbols>true</DebugSymbols>
		<DebugType>full</DebugType>
	</PropertyGroup>

	<PropertyGroup>
		<!-- Force the project to use the legacy debugger engine 
		<DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>-->

		<!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
        e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 
		<DefineConstants>DEBUG;REVIT$(Configuration)</DefineConstants>-->
		<PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>

		<!-- Override 'OutputPath'  -->
		<AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
		<OutputPath>bin\$(RevitVersion)</OutputPath>
		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
	</PropertyGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Revit.ES.Extension\Revit.ES.Extension.csproj" />
	</ItemGroup>
	
	<PropertyGroup>
		<!--<RevitPath>c:\Program Files\Autodesk\Revit $(RevitVersion)\</RevitPath>-->
		<RevitPath>..\..\RevitAPI\$(RevitVersion)\</RevitPath>
	</PropertyGroup>	

	<ItemGroup>
		<Reference Include="RevitAPI">
			<HintPath>$(RevitPath)RevitAPI.dll</HintPath>
			<Private>False</Private>
		</Reference>
		<Reference Include="RevitAPIUI">
			<HintPath>$(RevitPath)RevitAPIUI.dll</HintPath>
			<Private>False</Private>
		</Reference>
	</ItemGroup>

	<ItemGroup>
		<None Update="Revit.ES.ExtensionTestCommand.addin">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>


	<!-- Clean up debug manifest -->
	<Target Name="CleanupAddinManifest" AfterTargets="AfterClean">
		<Delete Files="$(AppData)\Autodesk\REVIT\Addins\$(RevitVersion)\Revit.ES.ExtensionTestCommand.addin" />
	</Target>	
	
	<!-- Build debug manifest at build time -->
	<Target Name="CreateAddinManifest" AfterTargets="AfterBuild">
		<ItemGroup>
			<AddinManifest Include="$(AppData)\Autodesk\REVIT\Addins\$(RevitVersion)\Revit.ES.ExtensionTestCommand.addin" />
		</ItemGroup>
		<ReplaceFileText InputFilename="Revit.ES.ExtensionTestCommand.addin" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$(TargetDir)$(AssemblyName).dll&lt;" />
		<ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;VendorId&gt;(.*?)&lt;" ReplacementText="&lt;VendorId&gt;$(PackageId)&lt;" />
		<!--<ReplaceFileText InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;FullClassName&gt;(.*?)&lt;" ReplacementText="&lt;FullClassName&gt;$(RootNamespace).App&lt;" />-->
	</Target>
	
	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Full'" TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>

	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Core'" TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>

	
</Project>